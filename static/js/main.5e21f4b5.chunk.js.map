{"version":3,"sources":["services/apiRequest.js","constants/api_url.js","services/transformWheater.js","constants/weathers.js","services/transformForecast.js","actions/index.js","components/SearchContainer/index.js","components/WeatherExtraInfo/index.js","components/WeatherTemperature/index.js","components/WeatherData/index.js","components/ForecastItem/index.js","components/ContentLoaders/ForecastLoader.js","components/ForecastExtended/index.js","containers/ForecastExtendedContainer.js","components/ContentLoaders/WheaterLocationCard.js","components/Location/index.js","components/WeatherLocation/index.js","components/LocationList/index.js","containers/LocationListContainer.js","App.js","serviceWorker.js","reducers/index.js","reducers/savedCities.js","reducers/weatherData.js","reducers/selectedCity.js","reducers/fetchingStatus.js","store/index.js","components/Footer/index.js","index.js","assets/logo.png"],"names":["apiRequest","baseUrl","apiKey","location","signal","a","path","fetch","response","json","data","API_KEY","transformWeather","weatherData","main","humidity","temp","speed","wind","weatherState","id","getWeatherState","weather","temperature","Number","convert","from","to","toFixed","getTemp","transformForecast","list","filter","element","moment","unix","dt","utc","hour","map","item","weekDay","format","setCity","value","type","setForecastData","setWeatherData","setFetchingStatus","setWeatherOnCity","dispatch","fetchedData","city","getWeatherData","withStyles","container","display","width","margin","marginTop","marginBottom","cssOutlinedInput","borderColor","cssFocused","cssLabel","color","notchedOutline","borderWidth","btnContainer","alignItems","marginLeft","searchBtn","backgroundColor","outline","btnFocused","classes","useState","enteredText","setEnteredText","savedCities","useSelector","state","useDispatch","useEffect","handleClickOutside","e","target","closest","document","addEventListener","removeEventListener","className","noValidate","autoComplete","onSubmit","toUpperCase","length","localStorage","setItem","JSON","stringify","preventDefault","handleSubmit","TextField","label","variant","fullWidth","onChange","InputLabelProps","focused","InputProps","root","Button","disabled","WeatherExtraInfo","icons","WeatherTemperature","icon","name","size","getWeatherIcon","WeatherData","ForecastItem","Divider","ForecastLoader","Skeleton","height","ForecastExtended","completeForecast","forecastData","isFetching","Paper","elevation","Card","dayForecast","key","ForecastExtendedContainer","selectedCity","fetchingStatus","abortController","AbortController","getState","lastFetch","forecastDataDate","currenTime","Date","aborted","console","error","updateForecast","setForecastOnCity","abort","LocationCardLoader","useStyles","makeStyles","border","borderRadius","padding","title","fontSize","fontWeight","justifyContent","Location","CardHeader","Typography","WeatherLocation","eventHandler","onClick","LocationList","cities","onSelectedLocation","clickEventHanlder","LocationListContainer","forEach","transformedData","hasOwnProperty","weatherInfo","push","App","AppBar","position","Toolbar","src","Logo","alt","xs","md","Boolean","window","hostname","match","combineReducers","action","handleState","unshift","initialState","getItem","parse","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","Footer","href","rel","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.5e21f4b5.chunk.js","sourcesContent":["export const apiRequest = async (baseUrl, apiKey, location, signal) => {\n  const path = `${baseUrl}?q=${location}&appid=${apiKey}`;\n  const response = await fetch(path, { signal });\n  const data = await response.json();\n  return data;\n};\n","export const API_KEY = \"be17545c076e7632e2dd8be50b4ed740\";\nexport const BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nexport const FORECAST_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\n","import convert from \"convert-units\";\nimport {\n  SUN,\n  CLOUD,\n  RAIN,\n  SNOW,\n  DRIZZLE,\n  THUNDER,\n} from \"./../constants/weathers\";\n\nconst getTemp = (temp) => {\n  return Number(convert(temp).from(\"K\").to(\"C\").toFixed(0));\n};\n\nconst getWeatherState = (weatherData) => {\n  const { id } = weatherData;\n\n  if (id < 300) {\n    return THUNDER;\n  } else if (id < 400) {\n    return DRIZZLE;\n  } else if (id < 600) {\n    return RAIN;\n  } else if (id < 700) {\n    return SNOW;\n  } else if (id === 800) {\n    return SUN;\n  } else {\n    return CLOUD;\n  }\n};\n\nconst transformWeather = (weatherData) => {\n  const { humidity, temp } = weatherData.main;\n  const { speed } = weatherData.wind;\n  const weatherState = getWeatherState(weatherData.weather[0]);\n  const temperature = getTemp(temp);\n\n  const data = {\n    humidity,\n    temperature,\n    weatherState,\n    wind: `${speed} m/s`,\n  };\n\n  return { data };\n};\n\nexport default transformWeather;\n","export const CLOUD = \"cloud\";\n\nexport const SUN = \"sun\";\n\nexport const RAIN = \"rain\";\n\nexport const SNOW = \"snow\";\n\nexport const THUNDER = \"thunder\";\n\nexport const DRIZZLE = \"drizzle\";\n","import moment from \"moment\";\nimport \"moment/locale/es\";\nimport transformWeather from \"./transformWheater\";\n\nconst transformForecast = (data) => {\n  const { list } = data;\n\n  const filteredList = list.filter(\n    (element) =>\n      moment.unix(element.dt).utc().hour() === 6 ||\n      moment.unix(element.dt).utc().hour() === 12 ||\n      moment.unix(element.dt).utc().hour() === 18\n  );\n\n  const transformedData = filteredList.map((item) => {\n    return {\n      weekDay: moment.unix(item.dt).format(\"ddd\"),\n      hour: moment.unix(item.dt).utc().hour(),\n      data: transformWeather(item),\n    };\n  });\n\n  return transformedData;\n};\n\nexport default transformForecast;\n","import { apiRequest } from \"../services/apiRequest\";\nimport { FORECAST_URL, API_KEY, BASE_URL } from \"../constants/api_url\";\nimport transformWeather from \"../services/transformWheater\";\nimport transformForecast from \"../services/transformForecast\";\n\nexport const SET_CITY = \"SET_CITY\";\nexport const SET_FORECASTDATA = \"SET_FORECASTDATA\";\nexport const SET_WEATHER_DATA = \"SET_WEATHER_DATA\";\nexport const SET_SAVED_CITY = \"SET_SAVED_CITY\";\nexport const SET_FETCHING_STATUS = \"SET_FETCHING_STATUS\";\n\nexport const setCity = (value) => ({\n  type: SET_CITY,\n  value,\n});\n\nexport const setForecastData = (value) => ({\n  type: SET_FORECASTDATA,\n  value,\n});\n\nexport const setWeatherData = (value) => ({\n  type: SET_WEATHER_DATA,\n  value,\n});\n\nexport const setFetchingStatus = (value) => ({\n  type: SET_FETCHING_STATUS,\n  value,\n});\n\nexport const setSavedCity = (value) => ({\n  type: SET_SAVED_CITY,\n  value,\n});\n\nexport const setForecastOnCity = (value, signal) => (dispatch, getState) => {\n  const state = getState();\n\n  const lastFetch =\n    state.weatherData[value] && state.weatherData[value].forecastDataDate;\n\n  const currenTime = new Date();\n\n  if (lastFetch && currenTime - lastFetch < 60000) {\n    return dispatch(setFetchingStatus(false));\n  }\n\n  const updateForecast = async () => {\n    try {\n      const fetchedData = await apiRequest(\n        FORECAST_URL,\n        API_KEY,\n        value,\n        signal\n      );\n      const forecastData = await transformForecast(fetchedData);\n      dispatch(setForecastData({ city: value, forecastData }));\n      dispatch(setFetchingStatus(false));\n    } catch (err) {\n      !signal.aborted && console.error(err);\n    }\n  };\n\n  return updateForecast();\n};\n\nexport const setWeatherOnCity = (value, signal) => (dispatch) => {\n  const getWeatherData = async () => {\n    try {\n      const fetchedData = await apiRequest(BASE_URL, API_KEY, value, signal);\n      const weatherData = await transformWeather(fetchedData);\n      dispatch(setWeatherData({ city: value, weatherData }));\n    } catch (err) {\n      dispatch(setWeatherData({ city: value, weatherData: null }));\n    }\n  };\n\n  return getWeatherData();\n};\n","//REACT\nimport React, { useState, useEffect } from \"react\";\n\n//LIBS\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n//REDUX\nimport { setWeatherOnCity, setSavedCity, setCity } from \"../../actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//STYLES\nconst styles = () => ({\n  container: {\n    display: \"flex\",\n    width: \"60%\",\n    margin: \"0px auto\",\n    marginTop: 20,\n    marginBottom: 20,\n  },\n\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"rgb(0, 162,183) !important\",\n    },\n  },\n\n  cssFocused: {},\n\n  cssLabel: {\n    color: \"rgb(0, 162,183) !important\",\n  },\n\n  notchedOutline: {\n    borderWidth: \"1px\",\n  },\n\n  btnContainer: {\n    color: \"rgb(0, 162,183) !important\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: 10,\n  },\n\n  searchBtn: {\n    backgroundColor: \"rgb(0, 162,183) !important\",\n    color: \"white\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n\n  btnFocused: {},\n});\n\nconst SearchBar = ({ classes }) => {\n  const [enteredText, setEnteredText] = useState(\"\");\n  let savedCities = useSelector((state) => state.savedCities);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e, state) => {\n    dispatch(setSavedCity(state.toUpperCase()));\n    dispatch(setCity(null));\n\n    if (state && state.length > 2) {\n      dispatch(setWeatherOnCity(state.toUpperCase()));\n      localStorage.setItem(\n        \"wheaterApp_savedCities\",\n        JSON.stringify(savedCities)\n      );\n    }\n    setEnteredText(\"\");\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    function handleClickOutside(e) {\n      const isInside = e.target.closest(\"form\");\n      !isInside && setEnteredText(\"\");\n    }\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <form\n      className={classes.container}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={(e) => handleSubmit(e, enteredText)}\n    >\n      <TextField\n        id=\"outlined-search\"\n        label=\"Busca tu ciudad\"\n        type=\"search\"\n        variant=\"outlined\"\n        value={enteredText}\n        fullWidth={true}\n        onChange={(e) => setEnteredText(e.target.value)}\n        InputLabelProps={{\n          classes: {\n            focused: classes.cssLabel,\n          },\n        }}\n        InputProps={{\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n          },\n        }}\n      />\n      <div className={classes.btnContainer}>\n        {enteredText ? (\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            className={classes.searchBtn}\n          >\n            Search\n          </Button>\n        ) : (\n          <Button variant=\"contained\" disabled>\n            Search\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nexport default withStyles(styles)(SearchBar);\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst WeatherExtraInfo = ({ humidity, wind }) => (\n  <div className=\"info-container\">\n    <span>{`Humedad: ${humidity}% - `}</span>\n    <span>{`Viento: ${wind}`}</span>\n  </div>\n);\n\nWeatherExtraInfo.propTypes = {\n  humidity: PropTypes.number.isRequired,\n  wind: PropTypes.string.isRequired,\n};\n\nexport default WeatherExtraInfo;\n","import React from \"react\";\nimport WeaterIcons from \"react-weathericons\";\nimport PropTypes from \"prop-types\";\nimport {\n  CLOUD,\n  SUN,\n  RAIN,\n  SNOW,\n  THUNDER,\n  DRIZZLE,\n} from \"../../constants/weathers\";\n\nimport \"./styles.css\";\n\nconst icons = {\n  [CLOUD]: \"cloud\",\n  [SUN]: \"day-sunny\",\n  [RAIN]: \"rain\",\n  [SNOW]: \"snow\",\n  [THUNDER]: \"day-thunderstorm\",\n  [DRIZZLE]: \"day-showers\",\n};\n\nconst getWeatherIcon = (weatherState) => {\n  const icon = icons[weatherState];\n\n  const sizeIcon = \"4x\";\n  if (icon) {\n    return (\n      <WeaterIcons\n        className={`${icon === \"day-sunny\" ? \"icon-yellow\" : \"icon-green\"}`}\n        name={icon}\n        size={sizeIcon}\n      />\n    );\n  } else {\n    return (\n      <WeaterIcons className=\"text-green\" name={\"cloud\"} size={sizeIcon} />\n    );\n  }\n};\n\nconst WeatherTemperature = ({ temperature, weatherState }) => (\n  <div className=\"temp-container\">\n    {getWeatherIcon(weatherState)}\n    <span className=\"temperature\">{`${temperature} C°`}</span>\n  </div>\n);\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired,\n};\n\nexport default WeatherTemperature;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\n\n//COMPONENTS\nimport WeatherExtraInfo from \"../WeatherExtraInfo\";\nimport WeatherTemperature from \"../WeatherTemperature\";\n\nconst WeatherData = ({\n  data: { temperature, weatherState, humidity, wind },\n}) => (\n  <div className=\"card-body\">\n    <WeatherTemperature temperature={temperature} weatherState={weatherState} />\n    <WeatherExtraInfo humidity={humidity} wind={wind} />\n  </div>\n);\n\nWeatherData.propTypes = {\n  data: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    wind: PropTypes.string.isRequired,\n  }),\n};\n\nexport default WeatherData;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//COMPONENTS\nimport WeatherData from \"../WeatherData\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst ForecastItem = ({ weekDay, hour, data }) => {\n  return (\n    <div className=\"forecast-container\">\n      <h2 className=\"forecast-day\">\n        {weekDay.toUpperCase()} - {hour} hs.\n      </h2>\n      <WeatherData data={data} />\n      <Divider />\n    </div>\n  );\n};\n\nForecastItem.propTypes = {\n  weekDay: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ForecastItem;\n","//REACT\nimport React from \"react\";\n\n//MATERIAL UI\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst ForecastLoader = () => {\n  return (\n    <div className=\"forecast\">\n      <Skeleton variant=\"rect\" height={\"100%\"}>\n        <Skeleton variant=\"rect\" className=\"pb10\" height={210}>\n          <Skeleton\n            className=\"content-loader centered\"\n            width={120}\n            height={50}\n          />\n          <Skeleton\n            variant=\"circle\"\n            width={60}\n            height={60}\n            className=\"centered mb5\"\n          ></Skeleton>\n          <Skeleton\n            variant=\"rect\"\n            width={60}\n            height={40}\n            className=\"centered\"\n          ></Skeleton>\n          <Skeleton\n            variant=\"text\"\n            height={20}\n            className=\"centered content-loader\"\n          ></Skeleton>\n        </Skeleton>\n        <Divider />\n        <Skeleton variant=\"rect\" className=\"pb10\" height={210}>\n          <Skeleton\n            className=\"content-loader centered\"\n            width={120}\n            height={50}\n          />\n          <Skeleton\n            variant=\"circle\"\n            width={60}\n            height={60}\n            className=\"centered mb5\"\n          ></Skeleton>\n          <Skeleton\n            variant=\"rect\"\n            width={60}\n            height={40}\n            className=\"centered\"\n          ></Skeleton>\n          <Skeleton\n            variant=\"text\"\n            height={20}\n            className=\"centered content-loader\"\n          ></Skeleton>\n        </Skeleton>\n        <Divider />{\" \"}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default ForecastLoader;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\nimport { Card, Divider } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\n//COMPONENTS\nimport ForecastItem from \"../ForecastItem\";\nimport ForecastLoader from \"../ContentLoaders/ForecastLoader\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst renderForecastDays = (completeForecast) =>\n  completeForecast\n    ? completeForecast.map((dayForecast) => {\n        const {\n          weekDay,\n          hour,\n          data: { data },\n        } = dayForecast;\n\n        return (\n          <ForecastItem\n            key={`${weekDay}${hour}`}\n            weekDay={weekDay}\n            hour={hour}\n            data={data}\n          />\n        );\n      })\n    : null;\n\nconst ForecastExtended = ({ city, forecastData, isFetching }) => {\n  return (\n    <div className=\"forecast-main-container\">\n      <Paper elevation={4}>\n        <Card>\n          <div className=\"forecast\">\n            <h2 className=\"title\">Pronostico Extendido</h2>\n            <h3 className=\"subtitle\">{city}</h3>\n            <Divider />\n            {isFetching ? (\n              <ForecastLoader />\n            ) : (\n              <div className=\"scroll\">\n                {renderForecastDays(forecastData, city)}\n              </div>\n            )}\n          </div>\n        </Card>\n      </Paper>\n    </div>\n  );\n};\n\nForecastExtended.propTypes = {\n  city: PropTypes.string.isRequired,\n  forecastData: PropTypes.array,\n  isFetching: PropTypes.bool.isRequired,\n};\n\nexport default ForecastExtended;\n","import React, { useEffect } from \"react\";\nimport ForecastExtended from \"../components/ForecastExtended\";\nimport { Card, Divider } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setForecastOnCity, setFetchingStatus } from \"../actions\";\n\nconst ForecastExtendedContainer = () => {\n  const selectedCity = useSelector((state) => state.selectedCity);\n  const weatherData = useSelector((state) => state.weatherData);\n  const isFetching = useSelector((state) => state.fetchingStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (selectedCity) {\n      const signal = abortController.signal;\n      dispatch(setFetchingStatus(true));\n      dispatch(setForecastOnCity(selectedCity, signal));\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [selectedCity]);\n\n  return selectedCity ? (\n    <ForecastExtended\n      city={selectedCity}\n      forecastData={weatherData[selectedCity].forecastData}\n      isFetching={isFetching}\n    />\n  ) : (\n    <div className=\"forecast-main-container\">\n      <Paper elevation={4}>\n        <Card>\n          <div className=\"forecast\">\n            <h2 className=\"title\">Pronostico Extendido</h2>\n            <h3>SELECCIONE CIUDAD</h3>\n            <Divider />\n          </div>\n        </Card>\n      </Paper>\n    </div>\n  );\n};\n\nexport default ForecastExtendedContainer;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport Divider from \"@material-ui/core/Divider\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst LocationCardLoader = () => (\n  <div>\n    <Skeleton variant=\"rect\" height={70}>\n      <Skeleton className=\"content-loader centered card-title\" height={50} />\n    </Skeleton>\n    <Divider />\n    <Skeleton variant=\"rect\" className=\"centered pt10\" height={180}>\n      <Skeleton\n        variant=\"circle\"\n        width={60}\n        height={60}\n        className=\"centered mb5\"\n      ></Skeleton>\n      <Skeleton\n        variant=\"rect\"\n        width={60}\n        height={60}\n        className=\"centered mb5\"\n      ></Skeleton>\n      <Skeleton\n        variant=\"text\"\n        height={20}\n        className=\"content-loader centered mb5\"\n      ></Skeleton>\n    </Skeleton>\n  </div>\n);\n\nexport default LocationCardLoader;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//STYLES\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: \"rgb(220,220,220)\",\n    border: 0,\n    borderRadius: 3,\n    height: 70,\n    padding: \"0 30px\",\n  },\n  title: {\n    height: \"auto\",\n    fontSize: \"1.6rem\",\n    fontWeight: 700,\n    justifyContent: \"center\",\n  },\n});\n\nconst Location = ({ city }) => {\n  const classes = useStyles();\n  return (\n    <CardHeader\n      className={classes.container}\n      title={<Typography className={classes.title}>{city}</Typography>}\n    ></CardHeader>\n  );\n};\n\nLocation.propTypes = {\n  city: PropTypes.string.isRequired,\n};\n\nexport default Location;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\nimport Card from \"@material-ui/core/Card\";\n\n//COMPONENTS\nimport LocationCardLoader from \"../ContentLoaders/WheaterLocationCard\";\nimport Location from \"../Location\";\nimport WeatherData from \"../WeatherData\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst WeatherLocation = ({ city, eventHandler, data }) => {\n  return (\n    <Card\n      className=\"location-container\"\n      elevation={4}\n      onClick={() => eventHandler()}\n    >\n      {data ? (\n        <>\n          <Location city={city} />\n          <WeatherData data={data} />\n        </>\n      ) : (\n        <LocationCardLoader />\n      )}\n    </Card>\n  );\n};\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string.isRequired,\n  eventHandler: PropTypes.func.isRequired,\n};\n\nexport default WeatherLocation;\n","//REACT\nimport React from \"react\";\n\n//LIBS\nimport PropTypes from \"prop-types\";\n\n//COMPONENTS\nimport WeatherLocation from \"../WeatherLocation/\";\n\n//STYLES\nimport \"./styles.css\";\n\nconst LocationList = ({ cities, onSelectedLocation }) => {\n  const clickEventHanlder = (city) => {\n    return onSelectedLocation(city);\n  };\n\n  return (\n    <div className=\"list-container\">\n      {cities.map((city) => (\n        <WeatherLocation\n          city={city.name}\n          data={city.data}\n          key={city.key}\n          eventHandler={() => clickEventHanlder(city.name)}\n        />\n      ))}\n    </div>\n  );\n};\n\nLocationList.propTypes = {\n  cities: PropTypes.array.isRequired,\n  onSelectedLocation: PropTypes.func.isRequired,\n};\n\nexport default LocationList;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LocationList from \"../components/LocationList\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCity, setWeatherOnCity } from \"../actions\";\n\nexport const LocationListContainer = () => {\n  const cities = useSelector((state) => state.savedCities);\n  const weatherData = useSelector((state) => state.weatherData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    cities.forEach(async (city) => {\n      dispatch(setWeatherOnCity(city));\n    });\n\n    return () => {};\n  }, [cities]);\n\n  const transformedData = (data, cities) => {\n    const transformedData = [];\n    cities.forEach((city) => {\n      for (const key in data) {\n        if (data.hasOwnProperty(key) && key === city) {\n          const weatherInfo = data[key].weatherData;\n          transformedData.push({\n            key,\n            name: key,\n            data: weatherInfo ? weatherInfo.data : weatherInfo,\n          });\n        }\n      }\n    });\n\n    return transformedData;\n  };\n\n  const handleSelectedLocation = (city) => {\n    dispatch(setCity(city));\n  };\n\n  return (\n    <LocationList\n      cities={transformedData(weatherData, cities)}\n      onSelectedLocation={handleSelectedLocation}\n    />\n  );\n};\n\nLocationListContainer.propTypes = {\n  cities: PropTypes.array,\n};\n\nexport default LocationListContainer;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid, Row, Col } from \"react-flexbox-grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchBar from \"./components/SearchContainer\";\nimport ForecastExtendedContainer from \"./containers/ForecastExtendedContainer\";\nimport LocationListContainer from \"./containers/LocationListContainer\";\nimport { Logo } from \"./assets\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <AppBar position=\"sticky\" className=\"main-header \">\n        <Toolbar>\n          <img src={Logo} alt=\"Logo\" className=\"main-logo\" />\n          <Typography variant=\"h4\" color=\"inherit\" className=\"h1\">\n            The Weather App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Grid className=\"App container-fluid\">\n        <Row className=\"mb-3\"></Row>\n        <Row>\n          <SearchBar />\n        </Row>\n        <Row>\n          <Col xs={12} md={6} className=\"mb-4\">\n            <LocationListContainer />\n          </Col>\n          <Col xs={12} md={6} className=\"mb-4\">\n            <ForecastExtendedContainer />\n          </Col>\n        </Row>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { selectedCity } from \"./selectedCity\";\nimport { weatherData } from \"./weatherData\";\nimport { savedCities } from \"./savedCities\";\nimport { fetchingStatus } from \"./fetchingStatus\";\n\nexport default combineReducers({\n  savedCities,\n  weatherData,\n  selectedCity,\n  fetchingStatus,\n});\n","import { SET_SAVED_CITY } from \"../actions\";\n\nexport const savedCities = (state = {}, action) => {\n  switch (action.type) {\n    case SET_SAVED_CITY:\n      const handleState = (state) => {\n        state.unshift(action.value);\n        state.length = 2;\n\n        return state;\n      };\n      return handleState(state);\n    default:\n      return state;\n  }\n};\n","import { SET_FORECASTDATA, SET_WEATHER_DATA } from \"../actions\";\n\nexport const weatherData = (state = null, action) => {\n  switch (action.type) {\n    case SET_FORECASTDATA: {\n      const { city, forecastData } = action.value;\n      return {\n        ...state,\n        [city]: { ...state[city], forecastData, forecastDataDate: new Date() },\n      };\n    }\n    case SET_WEATHER_DATA: {\n      const { city, weatherData } = action.value;\n      return { ...state, [city]: { ...{ weatherData } } };\n    }\n    default:\n      return state;\n  }\n};\n","import { SET_CITY } from \"../actions\";\n\nexport const selectedCity = (state = {}, action) => {\n  switch (action.type) {\n    case SET_CITY:\n      return action.value;\n    default:\n      return state;\n  }\n};\n","import { SET_FETCHING_STATUS } from \"../actions\";\n\nexport const fetchingStatus = (state = false, action) => {\n  switch (action.type) {\n    case SET_FETCHING_STATUS:\n      return action.value;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { default as reducers } from \"../reducers/\";\n\nconst initialState = {\n  savedCities: localStorage.getItem(\"wheaterApp_savedCities\")\n    ? JSON.parse(localStorage.getItem(\"wheaterApp_savedCities\"))\n    : [\"MADRID\", \"MIAMI\"],\n\n  selectedCity: null,\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","//REACT\nimport React from \"react\";\n\n//STYLES\nimport \"./styles.css\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-container\">\n        <p>\n          Codeado con <i className=\"fas fa-heart\"></i> por Alexis Lazzuri\n        </p>\n\n        <a\n          href=\"https://github.com/alazzuri\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"github\"\n        >\n          <i className=\"fab fa-github-alt fa-lg\"></i> github.com/alazzuri\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"bootstrap/dist/css/bootstrap.css\";\nimport { store } from \"./store\";\nimport Footer from \"./components/Footer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <Footer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b618e8cb.png\";"],"sourceRoot":""}